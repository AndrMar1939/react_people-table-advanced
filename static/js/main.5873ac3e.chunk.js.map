{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","Pages/Home/Home.tsx","types/SearchTypes.ts","utils/searchHelper.ts","components/SeachLink/SearchLink.tsx","components/Filters/PeopleFilters.tsx","variables/constants.ts","components/PeopleList/PeopleList.tsx","hooks/usePeopleToRender.ts","api.ts","components/Loader/Loader.tsx","Pages/PeoplePage/PeoplePage.tsx","helpers/getNormalizedPeopleList.ts","components/NotFound/NotFound.tsx","Root.tsx","index.tsx"],"names":["className","isActive","cn","Navbar","role","to","App","Home","SearchOptionsType","SortListType","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","CENTURIES","PeopleFilters","setSearchParams","query","get","Query","sex","Sex","centuries","getAll","Centuries","toggleCentury","century","includes","filter","cent","type","placeholder","onChange","event","target","map","length","TABLE_COLUMNS_WITHOUT_SORTING","PeopleList","peopleToRender","people","sort","Sort","orderNumber","Order","filteredPeople","person","isVisible","normalizedQuery","toLowerCase","isQueryIncluded","name","motherName","fatherName","isCenturyIncluded","Math","ceil","born","personA","personB","Name","localeCompare","Born","Died","died","usePeopleToRender","personId","useParams","normalizedParams","order","sortParams","sortKey","getSortParams","column","slug","mother","father","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PeoplePage","useState","peopleList","setPeopleList","isError","setIsError","isNoPeopleOnServer","setIsNoPeopleOnServer","isLoading","setIsLoading","normalizedPeopleList","parentsList","reduce","acc","personCopy","normalizedMotherName","normalizedFatherName","getNormalizedPeopleList","useLayoutEffect","getPeople","data","catch","finally","NotFound","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.5873ac3e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nconst className = ({ isActive }: { isActive: boolean }) => cn('navbar-item',\n  { 'has-background-grey-lighter': isActive });\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={className}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={className}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </div>\n);\n","export const Home = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export enum SearchOptionsType {\n  Sort = 'sort',\n  Order = 'order',\n  Query = 'query',\n  Sex = 'sex',\n  Centuries = 'centuries',\n}\n\nexport enum SortListType {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchOptionsType } from '../../types/SearchTypes';\nimport { getSearchWith } from '../../utils/searchHelper';\nimport { SearchLink } from '../SeachLink/SearchLink';\n\nconst CENTURIES = ['16', '17', '18', '19', '20'];\nconst MALE = 'm';\nconst FEMALE = 'f';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(SearchOptionsType.Query) || '';\n  const sex = searchParams.get(SearchOptionsType.Sex) || null;\n  const centuries: string[] = searchParams.getAll(\n    SearchOptionsType.Centuries,\n  ) || [];\n\n  const handleChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, {\n        [SearchOptionsType.Query]: event.target.value || null,\n      }),\n    );\n  };\n\n  const toggleCentury = (century: string) => {\n    return centuries.includes(century)\n      ? centuries.filter(cent => cent !== century)\n      : [...centuries, century];\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': !sex,\n          })}\n          params={{ [SearchOptionsType.Sex]: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={\n            cn({\n              'is-active': sex === MALE,\n            })\n          }\n          params={{ [SearchOptionsType.Sex]: MALE }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={\n            cn({\n              'is-active': sex === FEMALE,\n            })\n          }\n          params={{\n            [SearchOptionsType.Sex]: FEMALE,\n          }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={query}\n            onChange={handleChangeInput}\n          />\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {CENTURIES.map(century => (\n              <SearchLink\n                data-cy=\"century\"\n                key={century}\n                className={\n                  cn('button', 'mr-1', {\n                    'is-info': centuries.includes(century),\n                  })\n                }\n                params={{\n                  [SearchOptionsType.Centuries]: toggleCentury(century),\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              data-cy=\"centuryALL\"\n              className={\n                cn('button', 'is-success', {\n                  'is-outlined': centuries.length,\n                })\n              }\n              params={{ [SearchOptionsType.Centuries]: [] }}\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            [SearchOptionsType.Sex]: null,\n            [SearchOptionsType.Query]: null,\n            [SearchOptionsType.Centuries]: [],\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","export const EMPTY_VALUE = '-';\n\nexport const FEMALE = 'f';\n\nexport const TABLE_COLUMNS_WITHOUT_SORTING = [\n  'Mother',\n  'Father'];\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\n\nimport { Person } from '../../types';\nimport { SearchLink } from '../SeachLink/SearchLink';\nimport {\n  TABLE_COLUMNS_WITHOUT_SORTING,\n  FEMALE,\n} from '../../variables/constants';\nimport { SearchOptionsType, SortListType } from '../../types/SearchTypes';\nimport { SearchParams } from '../../utils/searchHelper';\nimport { usePeopleToRender } from '../../hooks/usePeopleToRender';\n\ntype Props = {\n  people: Person[],\n};\n\nexport const PeopleList: React.FC<Props> = ({\n  people,\n}) => {\n  const peopleToRender = usePeopleToRender(people);\n  const { personId } = useParams();\n  const [searchParams] = useSearchParams();\n  const normalizedParams = searchParams.toString();\n  const sort = searchParams.get(SearchOptionsType.Sort) || null;\n  const order = searchParams.get(SearchOptionsType.Order) || null;\n\n  const getSortParams = (sortKey: SortListType): SearchParams => {\n    if (sort !== sortKey) {\n      const newSortParams: SearchParams = {\n        [SearchOptionsType.Sort]: sortKey,\n        [SearchOptionsType.Order]: null,\n      };\n\n      return newSortParams;\n    }\n\n    if (sort === sortKey && !order) {\n      return { [SearchOptionsType.Order]: 'desc' };\n    }\n\n    return {\n      [SearchOptionsType.Sort]: null,\n      [SearchOptionsType.Order]: null,\n    };\n  };\n\n  if (!peopleToRender.length) {\n    return (\n      <p>\n        There are no people matching the current search criteria\n      </p>\n    );\n  }\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.entries(SortListType).map(([key, value]) => {\n            const sortParams = getSortParams(value);\n\n            return (\n              <th>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {key}\n                  <SearchLink\n                    params={sortParams}\n                  >\n                    <span className=\"icon\">\n                      <i\n                        className={cn('fas', {\n                          'fa-sort': sort !== value,\n                          'fa-sort-up': sort === value && !order,\n                          'fa-sort-down': sort === value && order,\n                        })}\n                      />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n            );\n          })}\n\n          {TABLE_COLUMNS_WITHOUT_SORTING.map(column => (\n            <th>\n              {column}\n            </th>\n          ))}\n        </tr>\n      </thead>\n\n      <tbody>\n        {peopleToRender.map(person => {\n          const {\n            name,\n            sex,\n            born,\n            died,\n            fatherName,\n            motherName,\n            slug,\n            mother,\n            father,\n\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              key={slug}\n              className={cn({\n                'has-background-warning': personId === slug,\n              })}\n            >\n              <td>\n                <Link\n                  to={`/people/${slug}?${normalizedParams}`}\n                  className={cn({\n                    'has-text-danger': sex === FEMALE,\n                  })}\n                >\n                  {name}\n                </Link>\n              </td>\n\n              <td>\n                {sex}\n              </td>\n              <td>\n                {born}\n              </td>\n              <td>\n                {died}\n              </td>\n              <td>\n                {mother?.slug ? (\n                  <Link\n                    className=\"has-text-danger\"\n                    to={`/people/${mother?.slug}?${normalizedParams}`}\n                  >\n                    {motherName}\n                  </Link>\n                ) : (\n                  motherName\n                )}\n              </td>\n              <td>\n                {father ? (\n                  <Link\n                    to={`/people/${father?.slug}?${normalizedParams}`}\n                  >\n                    {fatherName}\n                  </Link>\n                ) : (\n                  fatherName\n                )}\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { SearchOptionsType, SortListType } from '../types/SearchTypes';\nimport { Person } from '../types';\n\nexport const usePeopleToRender = (people: Person[]) => {\n  const [searchParams] = useSearchParams();\n  const sex = searchParams.get(SearchOptionsType.Sex) || '';\n  const query = searchParams.get(SearchOptionsType.Query) || '';\n  const centuries: string[] = searchParams.getAll(\n    SearchOptionsType.Centuries,\n  ) || [];\n  const sort = searchParams.get(SearchOptionsType.Sort) || '';\n  const orderParam = searchParams.get(SearchOptionsType.Order) || '';\n  const orderNumber = orderParam ? (-1) : 1;\n\n  const filteredPeople = people.filter(person => {\n    let isVisible: boolean | undefined = true;\n\n    if (query) {\n      const normalizedQuery = query.toLowerCase();\n\n      const isQueryIncluded\n        = person.name.toLowerCase().includes(normalizedQuery)\n        || person.motherName?.toLowerCase().includes(normalizedQuery)\n        || person.fatherName?.toLowerCase().includes(normalizedQuery);\n\n      isVisible = isVisible && isQueryIncluded;\n    }\n\n    if (sex) {\n      isVisible = isVisible && person.sex === sex;\n    }\n\n    if (centuries.length) {\n      const isCenturyIncluded = centuries.includes(`${Math.ceil(person.born / 100)}`);\n\n      isVisible = isVisible && isCenturyIncluded;\n    }\n\n    return isVisible;\n  });\n\n  if (sort) {\n    filteredPeople.sort((personA, personB) => {\n      switch (sort) {\n        case SortListType.Name:\n          return (personA.name.localeCompare(personB.name) * orderNumber);\n        case SortListType.Sex:\n          return (personA.sex.localeCompare(personB.sex) * orderNumber);\n        case SortListType.Born:\n          return (personA.born - personB.born) * orderNumber;\n        case SortListType.Died:\n          return (personA.died - personB.died) * orderNumber;\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return filteredPeople;\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useLayoutEffect, useState } from 'react';\n\nimport { PeopleFilters } from '../../components/Filters/PeopleFilters';\nimport { PeopleList } from '../../components/PeopleList/PeopleList';\nimport { Person } from '../../types';\nimport { getNormalizedPeopleList } from '../../helpers/getNormalizedPeopleList';\nimport { getPeople } from '../../api';\nimport { Loader } from '../../components/Loader';\n\nexport const PeoplePage = () => {\n  const [peopleList, setPeopleList] = useState<Person[]>([]);\n  const [isError, setIsError] = useState(false);\n  const [isNoPeopleOnServer, setIsNoPeopleOnServer] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const normalizedPeopleList = getNormalizedPeopleList(peopleList);\n\n  useLayoutEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(data => {\n        setPeopleList(data);\n\n        if (!data.length) {\n          setIsNoPeopleOnServer(true);\n        }\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {!!normalizedPeopleList.length && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n          <div className=\"column\">\n\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {isNoPeopleOnServer && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!!normalizedPeopleList.length && (\n                <PeopleList\n                  people={normalizedPeopleList}\n                />\n              )}\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Person } from '../types';\nimport { EMPTY_VALUE } from '../variables/constants';\n\nexport const getNormalizedPeopleList = (people: Person[]) => {\n  const parentsList = people.reduce((acc, person) => {\n    const key = person.name;\n    /* eslint no-param-reassign: \"error\" */\n\n    acc[key] = person;\n\n    return acc;\n  }, {} as {\n    [key: string]: Person;\n  });\n\n  const list = people.map(person => {\n    const personCopy = { ...person };\n    const normalizedMotherName = person.motherName || EMPTY_VALUE;\n    const normalizedFatherName = person.fatherName || EMPTY_VALUE;\n\n    personCopy.motherName = normalizedMotherName;\n    personCopy.fatherName = normalizedFatherName;\n\n    personCopy.mother = parentsList[normalizedMotherName];\n    personCopy.father = parentsList[normalizedFatherName];\n\n    return personCopy;\n  });\n\n  return list;\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import {\n  HashRouter, Route, Routes, Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { Home } from './Pages/Home/Home';\nimport { PeoplePage } from './Pages/PeoplePage/PeoplePage';\nimport { NotFound } from './components/NotFound/NotFound';\n\nexport const Root = () => {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<Home />} />\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"people\" element={<PeoplePage />}>\n            <Route path=\":personId?\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFound />} />\n        </Route>\n      </Routes>\n    </HashRouter>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}